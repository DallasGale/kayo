---
import styles from "./styles.module.scss";
import Card, { type CardProps } from "./card";

import TalLoughnan from "../../assets/TAL_Loughnan.png";
import TalJones from "../../assets/TAL_Jones.png";

const collegues: CardProps[] = [
  {
    avatar: TalLoughnan.src,
    name: "John Doe",
    role: "Senior Producer",
  },
  {
    avatar: TalJones.src,
    name: "John Doe",
    role: "Senior Producer",
  },
  {
    avatar: TalLoughnan.src,
    name: "John Doe",
    role: "Senior Producer",
  },
  {
    avatar: TalJones.src,
    name: "John Doe",
    role: "Senior Producer",
  },
  {
    avatar: TalLoughnan.src,
    name: "John Doe",
    role: "Senior Producer",
  },
  {
    avatar: TalJones.src,
    name: "John Doe",
    role: "Senior Producer",
  },
  {
    avatar: TalLoughnan.src,
    name: "John Doe",
    role: "Senior Producer",
  },
  {
    avatar: TalJones.src,
    name: "John Doe",
    role: "Senior Producer",
  },
  {
    avatar: TalLoughnan.src,
    name: "John Doe",
    role: "Senior Producer",
  },
  {
    avatar: TalJones.src,
    name: "John Doe",
    role: "Senior Producer",
  },
  {
    avatar: TalLoughnan.src,
    name: "John Doe",
    role: "Senior Producer",
  },
  {
    avatar: TalJones.src,
    name: "John Doe",
    role: "Senior Producer",
  },
];
---

<script>
  // window.addEventListener("load", () => {
  // const progressBar = document.querySelector("#progress-bar") as HTMLDivElement;
  // progressBar.style.left = "3%";
  const slideContainer: HTMLDivElement | null =
    document.querySelector("#slide-container");

  const scrollX = slideContainer?.scrollLeft;
  const width = slideContainer?.clientWidth;
  const scrollWidth = slideContainer?.scrollWidth;
  const progressBar = document.querySelector("#progress-bar") as HTMLDivElement;
  console.log({ scrollX, width, scrollWidth });

  if (scrollX && width && scrollWidth) {
    progressBar.style.left = `calc(${(scrollX / (scrollWidth - width)) * 100}%)`;
  }

  slideContainer?.addEventListener("scroll", (e) => {
    // if parent is being scrolled check the scrollX distance from the left and compare it to the width of the parent
    const scrollX = slideContainer.scrollLeft || 0;
    const width = slideContainer.clientWidth || 0;
    const scrollWidth = slideContainer.scrollWidth || 0;
    console.log({ scrollX, width, scrollWidth });
    const progressBar = document.querySelector(
      "#progress-bar",
    ) as HTMLDivElement;

    let percent = (scrollX / (scrollWidth - width)) * 90;
    console.log({ percent });

    if (percent < 2) return;
    progressBar.style.left = `calc(${percent}%)`;
  });
  console.log("loaded");
  // });
</script>

<section>
  <div class="content">
    <div class="container">
      <div class="title">
        <h6 class="display-1">Your future colleagues</h6>
      </div>
      <ul class={styles.slides} id="slide-container">
        {
          collegues.map((collegue: CardProps) => {
            return (
              <li class:list={[styles.slide, "slides"]}>
                <Card {...collegue} />
              </li>
            );
          })
        }
      </ul>
    </div>
    <div id="progress" class={styles.progress}>
      <div class={styles.fauxBar}></div>
      <div id="progress-bar" class={styles.progressBar}></div>
    </div>
  </div>
</section>

<style lang="scss">
  @import "../../breakpoints.scss";

  section {
    background-color: var(--kayogreen);
  }

  .content {
    overflow: hidden;
    max-width: 1440px;
    padding: 0;
  }
  .container {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    height: auto;
    width: 100%;
    padding-top: 64px;
  }

  @media screen and (min-width: $breakpoint-desktop) {
    .container {
      align-items: flex-start;
    }
    .title {
      padding: 0 42px 45px;
    }
  }
</style>
